#for checking rds cluster stopped or not
import boto3

def lambda_handler(event, context):
    
    # Replace <RDS_CLUSTER_IDENTIFIER> with the actual identifier of your RDS cluster
    rds = boto3.client('rds')
    cluster_status = rds.describe_db_clusters(DBClusterIdentifier='<RDS_CLUSTER_IDENTIFIER>')['DBClusters'][0]['Status']
    
    # Check if the cluster status is "stopped"
    if cluster_status == 'stopped':
        return "RDS cluster is stopped"
    else:
        return "RDS cluster is not stopped"
        
        
#To check RDS started properly or not
import boto3

def lambda_handler(event, context):

    # Replace <RDS_CLUSTER_IDENTIFIER> with the actual identifier of your RDS cluster
    rds = boto3.client('rds')
    response = rds.describe_db_clusters(DBClusterIdentifier='<RDS_CLUSTER_IDENTIFIER>')
    cluster_status = response['DBClusters'][0]['Status']
    db_instances = response['DBClusters'][0]['DBClusterMembers']

    # Check if the cluster status is "available"
    if cluster_status == 'available':
        # Check if all instances in the cluster are running
        for instance in db_instances:
            if instance['DBInstanceStatus'] != 'available':
                return "RDS cluster is running, but some instances are not available"
        return "RDS cluster is running properly"
    else:
        # Check if there are any errors reported in the response
        if 'ResponseMetadata' in response and 'HTTPStatusCode' in response['ResponseMetadata'] and response['ResponseMetadata']['HTTPStatusCode'] != 200:
            return "RDS cluster is not started properly. Error: " + str(response['ResponseMetadata']['HTTPStatusCode'])
        else:
            return "RDS cluster is not started properly"

